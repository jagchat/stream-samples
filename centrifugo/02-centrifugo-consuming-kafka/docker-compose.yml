version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - centrifugo-kafka-network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    networks:
      - centrifugo-kafka-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - centrifugo-kafka-network
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  centrifugo:
    image: centrifugo/centrifugo:latest
    container_name: centrifugo
    volumes:
      - ./centrifugo/config.json:/centrifugo/config.json
    ports:
      - "8000:8000"
    networks:
      - centrifugo-kafka-network
    depends_on:
      - kafka
    entrypoint: []
    command: >
      /bin/sh -c "
      echo 'Waiting for Kafka to be ready...' &&
      sleep 15 &&
      echo 'Starting Centrifugo...' &&
      centrifugo -c config.json"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  # Included for convenience to run test applications
  nodejs:
    image: node:18
    container_name: nodejs
    working_dir: /app
    volumes:
      - ./kafka-producer:/app
    networks:
      - centrifugo-kafka-network
    depends_on:
      - kafka
      - centrifugo
    command: tail -f /dev/null

networks:
  centrifugo-kafka-network:
    driver: bridge
